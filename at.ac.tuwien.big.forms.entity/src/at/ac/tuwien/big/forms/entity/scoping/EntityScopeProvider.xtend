/*
 * generated by Xtext
 */
package at.ac.tuwien.big.forms.entity.scoping

import org.eclipse.xtext.scoping.IScope
import at.ac.tuwien.big.forms.Entity
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.emf.ecore.EReference
import java.util.Collection
import at.ac.tuwien.big.forms.Attribute
import java.util.HashSet
import at.ac.tuwien.big.forms.Feature

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 *
 */
class EntityScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {

	def IScope scope_Entity_id(Entity entity, EReference reference) {
		return Scopes.scopeFor(getAttributes(entity));
	}
	
	def Collection<Attribute> getAttributes(Entity entity) {
		var currentEntity = entity;
		val Collection<Attribute> attributes = new HashSet<Attribute>();

		while(currentEntity != null){
			for (Feature feature : currentEntity.getFeatures()) {
				if(feature instanceof Attribute){
					attributes.add(feature);
				}
			}
			
			currentEntity = currentEntity.getSuperType();
		}
		
		return attributes;
	}
}
